security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/login$
      stateless: true
      json_login:
        check_path: /api/login
        username_path: email # specify that the email field is used as the username Got error
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    secured_api:
      pattern: ^/api
      stateless: true
      jwt: ~ # This enables JWT on all routes under /api

  access_control:
    # Grant access to product listing for anonymous users
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/me, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/products, roles: PUBLIC_ACCESS, methods: GET }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    # # Define roles for different access levels
    # - { roles: ROLE_PRODUCT_VIEWER } # View product details (GET on /api/products/[id])
    # - { roles: ROLE_PRODUCT_EDITOR, attributes: { is_admin: true } } # Edit products (POST, PUT, DELETE on /api/products)

    # Restrict access to other API endpoints based on roles
    # - { path: ^/api, roles: ROLE_ADMIN } # Access other admin functionalities (replace with your specific paths)

    # Login endpoint remains anonymous
    # - { path: ^/api/login, roles: IS_ANONYMOUS }
